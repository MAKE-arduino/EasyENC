
#define ENC_A 2
#define ENC_B 3

bool p0, p1;
byte type = 1;
int8_t epos;
int8_t pollEnc(bool e0, bool e1) {
  if (p0 ^ p1 ^ e0 ^ e1) {
    int8_t state = 0;
(p1 ^ e0) ? ++epos : --epos;
            p0 = e0, p1 = e1;
            if (!epos) return 0;
    switch (type) {
      case 1:
        if (!(e0 & e1)) return 0;  // skip 01, 10, 00
        break;
      case 2:
        if (e0 | e1) return 0;  // skip 01, 10, 11
        break;
      case 3:
        if (e0 ^ e1) return 0;  // skip 10 01
        break;
    }
 state = ((epos > 0) ^ (0 &(1 << 2))) ? -1 : 1;
  epos = 0;
  return state;
  }
return 0;
}

void setup() {
  Serial.begin(115200);
  p0 = digitalRead(ENC_A);    // стартовые значения
  p1 = digitalRead(ENC_B);
}

void loop() {
  if(pollEnc(digitalRead(ENC_A), digitalRead(ENC_B)) == 1) Serial.println("right");
  else if(pollEnc(digitalRead(ENC_A), digitalRead(ENC_B)) == -1) Serial.println("left");// постоянный опрос в loop
}
